Bundler.require :benchmark

scaffold = Scaffold.create sequence: %[
ATGGAAAATTTTGGATTACTAAACTTAGAAAATAAGGAATATTTTGAGAGGGAATTAATGTCTTTAATTA
GTTCTCTTATTGATTGGAAAATTGATAACTCTATCGTTAGACGCTCTAATGATAGACATGAGATTATTGA
GATTGCCCCATTACCTAAATCAGGACAAAGATTAAATGATTCTATTAGGTATATTTTGAATACAATTGAT
AGAAATATAAATTTTTCGAGTAATAAATTTATGGGTTTTCCAGACGCAGGAAATTCATTAGCGGGATTGG
CAGCAGCAATAATTGAAGTTTTTCTCCAGCAGAATCTTATAAATAAGGATATTTGCTCACCTATGGGAAG
TGAAATTGAAGCAGAAGTTATTATTTGGCTGAGACAAATTTTGGGTTATTCTTTTGATGATAAAATATAT
GACGTTACTAAATTAGGAGGAGCAGTCACAACTGGTGGAGTAATGTCAAATACCTATGCTCTTATGGCAG
CTAAACGAAAATATCCTAATAAAAGAATTGTAATACTTCCAGATAATATAGGGCACTACTCATTAAGCTA
TGCAACTGAATGGCTTAATCTTGGAGTTGAGGTTATATACTGTAAGACTGAGAAATATAAGATTAACCAG
TCGGAATTATCAAAATTGCTTCAAAAATATGGTGAAAATGTACTTTTTATAGGTGTTTATGCATGCGATT
CAATGACATCGACTTGTGAAGATTTGGAAGGAATCTACAAAATCGTAAATAATTATAGTACGGATATTTG
GCTGCACGCAGATGCATGCCATGGATTTGTATTGGTTTTTTCAGAACACTACAAAAATAGAATAGAATAT
CTAAAGTATTTCGATAGTTGTACGATGGATCCACATAAAGTCCTCTGGATACCATATACACTTAGTATTA
TCTTAATGAAAAATACAGATGATTTTGCAAGTCTTTCAAGATCTAATGCATTAATTATGGATGATCCATT
ATCCTTTGGAAAAACAACTCCTTTTATTGGAAGTAAATCTTATGATAGTTTAAAATTGTGGATGGTTATG
AAGACACTTGGAACTCAGAAAATAGGTGAAATGGTGGAGAGCAGGATTGAAAATGCAAAGAAATTTTATA
ATATTCTGAGTGAAAATAATGCATTTATTATGGCAAATACAGATATATTATTTTCTGTTATCTTTCAGTA
CACTCCTAGATTGGATATATCGATTAATCAAATGAACACTTTGAATAGAAAAATATATGATAAAATGTTA
CTTGATGGTAAATTCTATTTTCATGGTTTTGAAATTAATGTAAATGGTGTCAATAGATTCGTTCTTCGAT
ACAATAGTGGTAATATTAATATTACCGAAGTAGAGTTGGAAGATGCTGTAAAATATATTGAAAAGATTGG
GAAAGAGGTATCTAATGAACAAAATTGAA]

feature = Feature.create scaffold: scaffold,
                         start: 0,
                         stop: scaffold.sequence.size

result = RubyProf.profile do
  feature.protein_sequence
end

result.eliminate_methods!([/Integer#times/])

printer = RubyProf::FlatPrinter.new(result)

printer.print(STDOUT)
